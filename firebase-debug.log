[debug] [2025-07-19T19:43:43.691Z] ----------------------------------------------------------------------
[debug] [2025-07-19T19:43:43.698Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-19T19:43:43.699Z] CLI Version:   14.10.1
[debug] [2025-07-19T19:43:43.700Z] Platform:      linux
[debug] [2025-07-19T19:43:43.700Z] Node Version:  v20.19.1
[debug] [2025-07-19T19:43:43.700Z] Time:          Sat Jul 19 2025 19:43:43 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-19T19:43:43.700Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-19T19:43:43.711Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-07-19T19:43:45.602Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-07-19T19:43:45.605Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-07-19T19:43:45.927Z] openjdk version "21.0.7" 2025-04-15

[debug] [2025-07-19T19:43:45.929Z] OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-19T19:43:45.967Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-19T19:43:45.984Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-19T19:43:45.990Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-19T19:43:46.006Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-19T19:43:46.007Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-19T19:43:46.008Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-19T19:43:49.622Z] Jul 19, 2025 7:43:49 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 19, 2025 7:43:49 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-19T19:43:49.729Z] API endpoint: http://127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-19T19:43:49.928Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-19T19:57:58.226Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-19T19:57:58.227Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":""}]}}
[debug] [2025-07-19T19:57:58.291Z] Jul 19, 2025 7:57:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 19, 2025 7:57:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-19T19:57:58.964Z] Jul 19, 2025 7:57:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 19, 2025 7:57:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-19T19:58:00.961Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-19T19:58:00.964Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules"},"description":"Rules content empty. Compilation aborted.","severity":"ERROR"}]}
[warn] ⚠  firestore.rules:0:0 - ERROR Rules content empty. Compilation aborted. 
[info] ✔  firestore: Rules updated. 
[debug] [2025-07-20T18:20:01.501Z] ----------------------------------------------------------------------
[debug] [2025-07-20T18:20:01.511Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-20T18:20:01.512Z] CLI Version:   14.10.1
[debug] [2025-07-20T18:20:01.513Z] Platform:      linux
[debug] [2025-07-20T18:20:01.513Z] Node Version:  v20.19.1
[debug] [2025-07-20T18:20:01.513Z] Time:          Sun Jul 20 2025 18:20:01 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-20T18:20:01.514Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-20T18:20:03.630Z] openjdk version "21.0.7" 2025-04-15
OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-20T18:20:03.683Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-20T18:20:03.744Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-20T18:20:03.759Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-20T18:20:03.806Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-20T18:20:03.810Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-20T18:20:03.810Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-20T18:20:09.345Z] Jul 20, 2025 6:20:09 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 20, 2025 6:20:09 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-20T18:20:09.446Z] API endpoint: http:// {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://"}}
[debug] [2025-07-20T18:20:09.447Z] 127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-20T18:20:09.606Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-20T18:47:26.658Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-20T18:47:26.659Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    // Users can read and update their own profile.\n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    // Financial Projects\n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // Transactions for Financial Projects\n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // Production (Call Sheet) Projects\n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // Shooting Days for Productions\n    match /shooting_days/{dayId} {\n       allow read, update, delete: if isOwner(resource.data.userId);\n       allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // Creative Projects (Moodboards)\n    match /creative_projects/{creativeProjectId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // Board Items for Creative Projects\n    match /board_items/{itemId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // Storyboard Projects\n    match /storyboards/{storyboardId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // Storyboard Panels\n    match /storyboard_panels/{panelId} {\n        // Individual read/write is allowed if user is owner\n        allow get, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n        // Listing panels is allowed if the query filters by the user's own ID\n        allow list: if request.auth != null && request.query.where.userId == request.auth.uid;\n    }\n\n    // --- Public Content Collections ---\n    \n    // Blog Posts - anyone can read\n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    // Page Content (About, Contact, etc.) - anyone can read\n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    // Team Members (for About page) - anyone can read\n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    // Theme Settings - anyone can read\n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-20T18:47:26.740Z] Jul 20, 2025 6:47:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 20, 2025 6:47:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-20T18:47:28.304Z] Jul 20, 2025 6:47:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 20, 2025 6:47:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-20T18:47:33.010Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-20T18:47:33.017Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[debug] [2025-07-21T01:15:40.521Z] ----------------------------------------------------------------------
[debug] [2025-07-21T01:15:40.536Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-21T01:15:40.538Z] CLI Version:   14.10.1
[debug] [2025-07-21T01:15:40.541Z] Platform:      linux
[debug] [2025-07-21T01:15:40.541Z] Node Version:  v20.19.1
[debug] [2025-07-21T01:15:40.542Z] Time:          Mon Jul 21 2025 01:15:40 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-21T01:15:40.542Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-21T01:15:40.552Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-07-21T01:15:42.491Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-07-21T01:15:42.491Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-07-21T01:15:42.902Z] openjdk version "21.0.7" 2025-04-15
OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-21T01:15:42.970Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-21T01:15:42.989Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-21T01:15:42.997Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-21T01:15:43.017Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-21T01:15:43.018Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-21T01:15:43.020Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-21T01:15:51.354Z] Jul 21, 2025 1:15:51 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 21, 2025 1:15:51 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-21T01:15:51.482Z] API endpoint: http://127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-21T01:15:51.677Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2025-07-21T12:48:59.062Z] ----------------------------------------------------------------------
[debug] [2025-07-21T12:48:59.092Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-21T12:48:59.094Z] CLI Version:   14.10.1
[debug] [2025-07-21T12:48:59.095Z] Platform:      linux
[debug] [2025-07-21T12:48:59.095Z] Node Version:  v20.19.1
[debug] [2025-07-21T12:48:59.096Z] Time:          Mon Jul 21 2025 12:48:59 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-21T12:48:59.096Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-21T12:49:01.076Z] openjdk version "21.0.7" 2025-04-15

[debug] [2025-07-21T12:49:01.080Z] OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-21T12:49:01.106Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-21T12:49:01.142Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-21T12:49:01.150Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-21T12:49:01.182Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-21T12:49:01.184Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-21T12:49:01.185Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-21T12:49:09.023Z] Jul 21, 2025 12:49:08 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 21, 2025 12:49:08 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-21T12:49:09.152Z] API endpoint: http:// {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://"}}
[debug] [2025-07-21T12:49:09.166Z] 127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-21T12:49:09.229Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2025-07-22T00:15:41.781Z] ----------------------------------------------------------------------
[debug] [2025-07-22T00:15:41.786Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-22T00:15:41.788Z] CLI Version:   14.10.1
[debug] [2025-07-22T00:15:41.788Z] Platform:      linux
[debug] [2025-07-22T00:15:41.789Z] Node Version:  v20.19.1
[debug] [2025-07-22T00:15:41.789Z] Time:          Tue Jul 22 2025 00:15:41 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-22T00:15:41.789Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-22T00:15:43.043Z] openjdk version "21.0.7" 2025-04-15

[debug] [2025-07-22T00:15:43.044Z] OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-22T00:15:43.069Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-22T00:15:43.092Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-22T00:15:43.097Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-22T00:15:43.116Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-22T00:15:43.117Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-22T00:15:43.117Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-22T00:15:47.293Z] Jul 22, 2025 12:15:47 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:15:47 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-22T00:15:47.468Z] API endpoint: http://127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-22T00:15:47.728Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T00:56:54.945Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T00:56:54.945Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow write: if isOwner(request.auth.uid);\n       allow read: if isOwner(request.auth.uid) || resource.data.isPublic == true;\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow write: if isOwner(request.auth.uid);\n        allow read: if isOwner(request.auth.uid) || resource.data.isPublic == true;\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow write: if isOwner(request.auth.uid);\n        allow read: if isOwner(request.auth.uid) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        allow create, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T00:56:55.059Z] Jul 22, 2025 12:56:55 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:56:55 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T00:56:56.104Z] Jul 22, 2025 12:56:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:56:56 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-22T00:57:01.277Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T00:57:01.277Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T02:52:06.700Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T02:52:06.701Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       // Allow create if the user is the owner of the new document.\n       allow create: if isOwner(request.resource.data.userId);\n       // Allow read if owner, or if the document is marked as public.\n       allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n       // Allow update/delete only by the owner.\n       allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        // Allow create if the user is the owner of the new document.\n        allow create: if isOwner(request.resource.data.userId);\n        // Allow read if owner, or if the document is marked as public.\n        allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n        // Allow update/delete only by the owner.\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        // Owner can do everything.\n        allow create: if isOwner(request.resource.data.userId);\n        allow read, update, delete: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        // Anyone can read from this collection\n        allow get: if true;\n        // Only authenticated users can create/delete their own shares\n        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;\n        allow delete: if request.auth != null && resource.data.userId == request.auth.uid;\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T02:52:06.831Z] Jul 22, 2025 2:52:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 2:52:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T02:52:06.998Z] Jul 22, 2025 2:52:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 2:52:06 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-22T02:52:07.743Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T02:52:07.743Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T02:59:05.849Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T02:59:05.852Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow create: if isOwner(request.resource.data.userId);\n       allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n       allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow create: if isOwner(request.resource.data.userId);\n        allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        // Owner can do everything.\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n        // Allow read for owner, OR if the parent storyboard is public.\n        allow read: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        // Anyone can read from this collection\n        allow get: if true;\n        // Only authenticated users can create/delete their own shares\n        allow create, delete: if isOwner(request.resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}"}]}}
[debug] [2025-07-22T02:59:05.894Z] Jul 22, 2025 2:59:05 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 2:59:05 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T02:59:06.412Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T02:59:06.413Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[debug] [2025-07-22T11:33:25.838Z] ----------------------------------------------------------------------
[debug] [2025-07-22T11:33:25.848Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-22T11:33:25.851Z] CLI Version:   14.10.1
[debug] [2025-07-22T11:33:25.851Z] Platform:      linux
[debug] [2025-07-22T11:33:25.853Z] Node Version:  v20.19.1
[debug] [2025-07-22T11:33:25.853Z] Time:          Tue Jul 22 2025 11:33:25 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-22T11:33:25.853Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-22T11:33:25.863Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-07-22T11:33:27.643Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-07-22T11:33:27.646Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-07-22T11:33:27.839Z] openjdk version "21.0.7" 2025-04-15
OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-22T11:33:27.879Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-22T11:33:27.906Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-22T11:33:27.913Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-22T11:33:27.935Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-22T11:33:27.935Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-22T11:33:27.936Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-22T11:33:33.920Z] Jul 22, 2025 11:33:33 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 11:33:33 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-22T11:33:34.037Z] API endpoint: http:// {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://"}}
[debug] [2025-07-22T11:33:34.044Z] 127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-22T11:33:34.132Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T11:50:41.493Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T11:50:41.493Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       // Corrected rule: Checks ownership on the document being created or modified.\n       allow create: if isOwner(request.resource.data.userId);\n       // Corrected rule: For read, update, delete, check ownership on the existing document.\n       allow read, update, delete: if isOwner(resource.data.userId) || (resource.data.isPublic == true && request.method == 'get');\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        // Corrected rule: Separated create and other write operations for clarity and security.\n        allow create: if isOwner(request.resource.data.userId);\n        // Corrected rule: Update and delete require ownership.\n        allow update, delete: if isOwner(resource.data.userId);\n        // Corrected rule: Read is allowed for owner or if public.\n        allow read: if isOwner(resource.data.userId) || (resource.data.isPublic == true && request.method == 'get');\n    }\n\n    match /storyboard_panels/{panelId} {\n        // Corrected rule: Check ownership on create and write.\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n        // Corrected rule: Read is allowed for owner or if parent is public.\n        allow read: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        // Anyone can read from this collection\n        allow get: if true;\n        // Only authenticated users can create/delete their own shares, checks userId in the document\n        allow create, delete: if isOwner(request.resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T11:50:41.531Z] Jul 22, 2025 11:50:41 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 11:50:41 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T11:50:42.183Z] Jul 22, 2025 11:50:42 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 11:50:42 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-22T11:50:44.421Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T11:50:44.421Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T11:54:20.839Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T11:54:20.839Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow create: if isOwner(request.resource.data.userId);\n       allow update, delete: if isOwner(resource.data.userId);\n       allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n        allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n        allow read: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        allow create, delete: if isOwner(request.resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T11:54:20.853Z] Jul 22, 2025 11:54:20 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 11:54:20 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T11:54:21.308Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T11:54:21.308Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T11:59:39.008Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T11:59:39.008Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow create: if isOwner(request.resource.data.userId);\n       allow update, delete: if isOwner(resource.data.userId);\n       allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, update, delete: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n        allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n        allow read: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        // Only authenticated users can create/delete their own shares\n        allow create, delete: if isOwner(request.resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T11:59:39.021Z] Jul 22, 2025 11:59:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 11:59:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T11:59:39.365Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T11:59:39.369Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:01:56.639Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:01:56.639Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.userId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.userId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.userId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n       allow list: if request.auth.uid == request.query.filters.productionId[0][2];\n       allow create, update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow get, update, delete: if isOwner(resource.data.userId);\n        allow list: if request.auth.uid == request.query.filters.userId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow get, update, delete: if isOwner(resource.data.userId);\n        allow list: if request.auth.uid == request.query.filters.projectId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n        allow list: if request.auth.uid == request.query.filters.userId[0][2];\n        allow create, update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow get: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n        allow list: if isOwner(get(/databases/$(database)/documents/storyboards/$(request.query.filters.storyboardId[0][2])).data.userId);\n        allow create, update, delete: if isOwner(resource.data.userId);\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        allow create, delete: if isOwner(request.resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:01:56.654Z] Jul 22, 2025 12:01:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:01:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:01:56.951Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:01:56.951Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:11:57.600Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:11:57.601Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.userId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.userId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.userId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n       allow list: if request.auth.uid == request.query.filters.productionId[0][2];\n       allow create: if isOwner(request.resource.data.userId);\n       allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow get, update, delete: if isOwner(resource.data.userId);\n        allow list: if request.auth.uid == request.query.filters.userId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow get, update, delete: if isOwner(resource.data.userId);\n        allow list: if request.auth.uid == request.query.filters.projectId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n        allow list: if request.auth.uid == request.query.filters.userId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow get: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n        allow list: if get(/databases/$(database)/documents/storyboards/$(request.query.filters.storyboardId[0][2])).data.userId == request.auth.uid;\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        allow create: if isOwner(request.resource.data.userId);\n        allow delete: if isOwner(resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:11:57.610Z] Jul 22, 2025 12:11:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:11:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:11:57.844Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:11:57.845Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:23:52.510Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:23:52.510Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.userId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.projectId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow get, update, delete: if isOwner(resource.data.userId);\n      allow list: if request.auth.uid == request.query.filters.userId[0][2];\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n       allow list: if request.auth.uid == request.query.filters.productionId[0][2];\n       allow create: if isOwner(request.resource.data.userId);\n       allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow get, update, delete: if isOwner(resource.data.userId);\n        allow list: if request.auth.uid == request.query.filters.userId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow get, update, delete: if isOwner(resource.data.userId);\n        allow list: if request.auth.uid == request.query.filters.projectId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n        allow list: if request.auth.uid == request.query.filters.userId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow get: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n        allow list: if get(/databases/$(database)/documents/storyboards/$(request.query.filters.storyboardId[0][2])).data.userId == request.auth.uid;\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        allow create: if isOwner(request.resource.data.userId);\n        allow delete: if isOwner(resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:23:52.521Z] Jul 22, 2025 12:23:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:23:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:23:52.710Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:23:52.710Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:26:28.815Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:26:28.815Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      // Read rule simplified to allow list queries\n      allow read: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n      allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n      allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      // Read rule simplified to allow list queries\n      allow read: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n      allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       // get allows public access, list is restricted to owner\n       allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n       allow list: if request.auth.uid == request.query.filters.productionId[0][2];\n       allow create: if isOwner(request.resource.data.userId);\n       allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        // Read rule simplified to allow list queries\n        allow read: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        // Read rule simplified to allow list queries\n        allow read: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        // get allows public access, list is restricted to owner\n        allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n        allow list: if request.auth.uid == request.query.filters.userId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow get: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n        allow list: if get(/databases/$(database)/documents/storyboards/$(request.query.filters.storyboardId[0][2])).data.userId == request.auth.uid;\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        allow create: if isOwner(request.resource.data.userId);\n        allow delete: if isOwner(resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:26:28.841Z] Jul 22, 2025 12:26:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:26:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:26:28.988Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:26:28.991Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:28:57.689Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:28:57.696Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User-specific, private collections ---\n    \n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    // Rule for collections that are private to the user\n    match /{collection}/{docId} \n      where collection in ['projects', 'transactions', 'productions', 'creative_projects', 'board_items'] {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // Rule for storyboards (can be public)\n    match /storyboards/{storyboardId} {\n        allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n        allow list: if request.auth.uid == request.query.filters.userId[0][2];\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow get: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n        allow list: if get(/databases/$(database)/documents/storyboards/$(request.query.filters.storyboardId[0][2])).data.userId == request.auth.uid;\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    // Rule for shooting_days (can be public)\n    match /shooting_days/{dayId} {\n       allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n       allow list: if get(/databases/$(database)/documents/productions/$(request.query.filters.productionId[0][2])).data.userId == request.auth.uid;\n       allow create: if isOwner(request.resource.data.userId);\n       allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        allow create: if isOwner(request.resource.data.userId);\n        allow delete: if isOwner(resource.data.userId);\n    }\n\n    // --- Other Collections (Team, Content, etc.) ---\n    \n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:28:57.723Z] Jul 22, 2025 12:28:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:28:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:28:57.955Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:28:57.959Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":11,"currentOffset":443,"endOffset":443},"description":"Missing 'match' keyword before path.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":7,"currentOffset":472,"endOffset":476},"description":"Unexpected 'where'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":7,"currentOffset":472,"endOffset":476},"description":"mismatched input 'where' expecting {'{', '/', PATH_SEGMENT}","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":76,"column":1,"currentOffset":2839,"endOffset":2839},"description":"Unexpected '}'.","severity":"ERROR"}]}
[warn] ⚠  firestore.rules:18:11 - ERROR Missing 'match' keyword before path. 
[warn] ⚠  firestore.rules:19:7 - ERROR Unexpected 'where'. 
[warn] ⚠  firestore.rules:19:7 - ERROR mismatched input 'where' expecting {'{', '/', PATH_SEGMENT} 
[warn] ⚠  firestore.rules:76:1 - ERROR Unexpected '}'. 
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:30:44.399Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:30:44.399Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User Profile ---\n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    // --- Financial Projects ---\n    match /projects/{projectId} {\n      allow read, create, update, delete: if isOwner(request.auth.uid);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, create, update, delete: if isOwner(request.auth.uid);\n    }\n    \n    // --- Production (Call Sheet) ---\n    match /productions/{productionId} {\n      allow read, create, update, delete: if isOwner(request.auth.uid);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n       allow list: if get(/databases/$(database)/documents/productions/$(request.query.filters.productionId[0][2])).data.userId == request.auth.uid;\n       allow create: if isOwner(request.resource.data.userId);\n       allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    // --- Creative Projects (Moodboard) ---\n    match /creative_projects/{creativeProjectId} {\n        allow read, create, update, delete: if isOwner(request.auth.uid);\n    }\n\n    match /board_items/{itemId} {\n        allow read, create, update, delete: if isOwner(request.auth.uid);\n    }\n    \n    // --- Storyboards ---\n    match /storyboards/{storyboardId} {\n        allow get: if isOwner(resource.data.userId) || resource.data.isPublic == true;\n        allow list: if isOwner(request.auth.uid);\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow get: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;\n        allow list: if get(/databases/$(database)/documents/storyboards/$(request.query.filters.storyboardId[0][2])).data.userId == request.auth.uid;\n        allow create: if isOwner(request.resource.data.userId);\n        allow update, delete: if isOwner(resource.data.userId);\n    }\n    \n    // --- Public Shares Collection ---\n    match /public_shares/{shareId} {\n        allow get: if true;\n        allow create: if isOwner(request.resource.data.userId);\n        allow delete: if isOwner(resource.data.userId);\n    }\n\n    // --- Public Content & Settings ---\n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:30:44.412Z] Jul 22, 2025 12:30:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:30:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:30:44.553Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:30:44.558Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:38:03.722Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:38:03.722Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth.uid == userId;\n    }\n\n    // --- User Profile ---\n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    // --- User-owned data collections ---\n    match /projects/{projectId} {\n      allow read, write: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, write: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, write: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow read, write: if isOwner(resource.data.userId);\n       allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, write: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, write: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow read, write: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow read, write: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Public Content & Settings ---\n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:38:03.735Z] Jul 22, 2025 12:38:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:38:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:38:03.960Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:38:03.960Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:38:46.263Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:38:46.263Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth.uid == userId;\n    }\n\n    // --- User Profile ---\n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    // --- User-owned data collections ---\n    match /projects/{projectId} {\n      allow read, write: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, write: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, write: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow read, write: if isOwner(resource.data.userId);\n       allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, write: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, write: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow read, write: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow read, write: if isOwner(resource.data.userId);\n        allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Public Content & Settings ---\n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:38:46.273Z] Jul 22, 2025 12:38:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:38:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:38:46.439Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:38:46.439Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:40:29.210Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:40:29.211Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"\nrules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    function isOwner(userId) {\n      return request.auth.uid == userId;\n    }\n\n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n\n    // Public collections\n    match /{collection}/{docId} where collection in ['posts', 'pages', 'teamMembers', 'settings'] {\n        allow read: if true;\n        allow write: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:40:29.246Z] Jul 22, 2025 12:40:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:40:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:40:29.435Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:40:29.435Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":48,"column":11,"currentOffset":1630,"endOffset":1630},"description":"Missing 'match' keyword before path.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":48,"column":33,"currentOffset":1652,"endOffset":1656},"description":"Unexpected 'where'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":48,"column":33,"currentOffset":1652,"endOffset":1656},"description":"mismatched input 'where' expecting {'{', '/', PATH_SEGMENT}","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":53,"column":1,"currentOffset":1805,"endOffset":1805},"description":"Unexpected '}'.","severity":"ERROR"}]}
[warn] ⚠  firestore.rules:48:11 - ERROR Missing 'match' keyword before path. 
[warn] ⚠  firestore.rules:48:33 - ERROR Unexpected 'where'. 
[warn] ⚠  firestore.rules:48:33 - ERROR mismatched input 'where' expecting {'{', '/', PATH_SEGMENT} 
[warn] ⚠  firestore.rules:53:1 - ERROR Unexpected '}'. 
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T12:40:52.065Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T12:40:52.065Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"\nrules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    function isOwner(userId) {\n      return request.auth.uid == userId;\n    }\n\n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    match /projects/{projectId} {\n      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /creative_projects/{creativeProjectId} {\n        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);\n    }\n\n    // Public collections\n    match /{collection}/{docId} where collection in ['posts', 'pages', 'teamMembers', 'settings'] {\n        allow read: if true;\n        allow write: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T12:40:52.079Z] Jul 22, 2025 12:40:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 12:40:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T12:40:52.177Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T12:40:52.177Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":48,"column":11,"currentOffset":1630,"endOffset":1630},"description":"Missing 'match' keyword before path.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":48,"column":33,"currentOffset":1652,"endOffset":1656},"description":"Unexpected 'where'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":48,"column":33,"currentOffset":1652,"endOffset":1656},"description":"mismatched input 'where' expecting {'{', '/', PATH_SEGMENT}","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":53,"column":1,"currentOffset":1805,"endOffset":1805},"description":"Unexpected '}'.","severity":"ERROR"}]}
[warn] ⚠  firestore.rules:48:11 - ERROR Missing 'match' keyword before path. 
[warn] ⚠  firestore.rules:48:33 - ERROR Unexpected 'where'. 
[warn] ⚠  firestore.rules:48:33 - ERROR mismatched input 'where' expecting {'{', '/', PATH_SEGMENT} 
[warn] ⚠  firestore.rules:53:1 - ERROR Unexpected '}'. 
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T14:22:38.304Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T14:22:38.310Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      // Check if the user is authenticated and if their UID matches the provided userId.\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User Profile ---\n    match /users/{userId} {\n      // Users can read and update their own profile.\n      allow read, update: if isOwner(userId);\n    }\n    \n    // --- Generic rule for user-owned content ---\n    // This rule applies to all collections where documents have a 'userId' field.\n    match /{collection}/{docId} \n      where collection in ['projects', 'transactions', 'productions', 'creative_projects', 'board_items', 'storyboards', 'storyboard_panels', 'shooting_days'] {\n      \n      // Allow read, update, and delete if the user owns the existing document.\n      allow read, update, delete: if isOwner(resource.data.userId);\n      \n      // Allow create if the user is creating a document for themselves.\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Public Content & Settings ---\n    \n    // Posts are public to read, but only authenticated users can write.\n    match /posts/{postId} {\n      allow read: if true;\n      allow write: if request.auth != null;\n    }\n    \n    // Static pages are public to read, but only authenticated users can write.\n    match /pages/{pageId} {\n      allow read: if true;\n      allow write: if request.auth != null;\n    }\n    \n    // Team members are public to read, but only authenticated users can write.\n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow write: if request.auth != null;\n    }\n    \n    // Theme settings are public to read, but only authenticated users can write.\n    match /settings/theme {\n      allow get: if true;\n      allow write: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T14:22:38.336Z] Jul 22, 2025 2:22:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 2:22:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T14:22:38.402Z] Jul 22, 2025 2:22:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 2:22:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-22T14:22:38.462Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T14:22:38.462Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":20,"column":11,"currentOffset":637,"endOffset":637},"description":"Missing 'match' keyword before path.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":21,"column":7,"currentOffset":666,"endOffset":670},"description":"Unexpected 'where'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":21,"column":7,"currentOffset":666,"endOffset":670},"description":"mismatched input 'where' expecting {'{', '/', PATH_SEGMENT}","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":56,"column":1,"currentOffset":1936,"endOffset":1936},"description":"Unexpected '}'.","severity":"ERROR"}]}
[warn] ⚠  firestore.rules:20:11 - ERROR Missing 'match' keyword before path. 
[warn] ⚠  firestore.rules:21:7 - ERROR Unexpected 'where'. 
[warn] ⚠  firestore.rules:21:7 - ERROR mismatched input 'where' expecting {'{', '/', PATH_SEGMENT} 
[warn] ⚠  firestore.rules:56:1 - ERROR Unexpected '}'. 
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T14:26:37.112Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T14:26:37.112Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership based on a userId field\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User Profile ---\n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    // --- Financial Projects ---\n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Production (Call Sheet) ---\n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow read, update, delete: if isOwner(resource.data.userId);\n       allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Creative Projects (Moodboard) ---\n    match /creative_projects/{creativeProjectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Storyboards ---\n    match /storyboards/{storyboardId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // --- Public Content & Settings ---\n    // These collections are readable by anyone but only writable by authenticated users.\n    match /posts/{postId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow create, update, delete: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T14:26:37.123Z] Jul 22, 2025 2:26:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 2:26:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T14:26:37.289Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T14:26:37.289Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-22T14:30:06.379Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-22T14:30:06.379Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership based on a userId field\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // --- User Profile ---\n    match /users/{userId} {\n      allow read, update: if isOwner(userId);\n    }\n    \n    // --- Financial Projects ---\n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Production (Call Sheet) ---\n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n       allow read, update, delete: if isOwner(resource.data.userId);\n       allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Creative Projects (Moodboard) ---\n    match /creative_projects/{creativeProjectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    // --- Storyboards ---\n    match /storyboards/{storyboardId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /storyboard_panels/{panelId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // --- Public Content & Settings ---\n    // These collections are readable by anyone but only writable by authenticated users.\n    match /posts/{postId} {\n      allow read: if true;\n      allow write: if request.auth != null;\n    }\n    \n    match /pages/{pageId} {\n      allow read: if true;\n      allow write: if request.auth != null;\n    }\n    \n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow write: if request.auth != null;\n    }\n    \n    match /settings/theme {\n      allow get: if true;\n      allow write: if request.auth != null;\n    }\n  }\n}\n"}]}}
[debug] [2025-07-22T14:30:06.392Z] Jul 22, 2025 2:30:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 22, 2025 2:30:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-22T14:30:06.552Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-22T14:30:06.552Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[debug] [2025-07-23T14:30:39.175Z] ----------------------------------------------------------------------
[debug] [2025-07-23T14:30:39.186Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-23T14:30:39.187Z] CLI Version:   14.10.1
[debug] [2025-07-23T14:30:39.187Z] Platform:      linux
[debug] [2025-07-23T14:30:39.188Z] Node Version:  v20.19.1
[debug] [2025-07-23T14:30:39.188Z] Time:          Wed Jul 23 2025 14:30:39 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-23T14:30:39.188Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-23T14:30:39.194Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-07-23T14:30:41.262Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-07-23T14:30:41.265Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-07-23T14:30:41.620Z] openjdk version "21.0.7" 2025-04-15

[debug] [2025-07-23T14:30:41.621Z] OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-23T14:30:41.657Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-23T14:30:41.673Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-23T14:30:41.680Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-23T14:30:41.698Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-23T14:30:41.698Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-23T14:30:41.698Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-23T14:30:48.423Z] Jul 23, 2025 2:30:48 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 23, 2025 2:30:48 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-23T14:30:48.605Z] API endpoint: http://127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST= {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST="}}
[debug] [2025-07-23T14:30:48.608Z] 127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-23T14:30:48.691Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2025-07-24T00:39:42.649Z] ----------------------------------------------------------------------
[debug] [2025-07-24T00:39:42.656Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-24T00:39:42.657Z] CLI Version:   14.10.1
[debug] [2025-07-24T00:39:42.659Z] Platform:      linux
[debug] [2025-07-24T00:39:42.659Z] Node Version:  v20.19.1
[debug] [2025-07-24T00:39:42.659Z] Time:          Thu Jul 24 2025 00:39:42 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-24T00:39:42.659Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-24T00:39:43.970Z] openjdk version "21.0.7" 2025-04-15

[debug] [2025-07-24T00:39:43.973Z] OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-24T00:39:43.999Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-24T00:39:44.028Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-24T00:39:44.034Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-24T00:39:44.049Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-24T00:39:44.050Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-24T00:39:44.050Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-24T00:39:51.812Z] Jul 24, 2025 12:39:51 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 24, 2025 12:39:51 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-24T00:39:52.007Z] API endpoint: http://127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST= {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST="}}
[debug] [2025-07-24T00:39:52.008Z] 127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-24T00:39:52.321Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2025-07-24T12:27:25.857Z] ----------------------------------------------------------------------
[debug] [2025-07-24T12:27:25.861Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-24T12:27:25.863Z] CLI Version:   14.10.1
[debug] [2025-07-24T12:27:25.863Z] Platform:      linux
[debug] [2025-07-24T12:27:25.863Z] Node Version:  v20.19.1
[debug] [2025-07-24T12:27:25.864Z] Time:          Thu Jul 24 2025 12:27:25 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-24T12:27:25.864Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-24T12:27:27.790Z] openjdk version "21.0.7" 2025-04-15
OpenJDK Runtime Environment (build 21.0.7+6-nixos)
OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-24T12:27:27.854Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-24T12:27:27.934Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-24T12:27:27.944Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-24T12:27:27.986Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-24T12:27:27.988Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-24T12:27:27.992Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-24T12:27:38.265Z] Jul 24, 2025 12:27:37 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 24, 2025 12:27:37 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-24T12:27:38.430Z] API endpoint: http://127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-24T12:27:38.648Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2025-07-25T11:18:24.473Z] ----------------------------------------------------------------------
[debug] [2025-07-25T11:18:24.481Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/gv0i9ndcpzjpfi2yr06402kzy90q51ki-firebase-tools-14.10.1/lib/node_modules/firebase-tools/lib/bin/firebase.js emulators:start --project=demo-app --only=auth,firestore
[debug] [2025-07-25T11:18:24.484Z] CLI Version:   14.10.1
[debug] [2025-07-25T11:18:24.485Z] Platform:      linux
[debug] [2025-07-25T11:18:24.485Z] Node Version:  v20.19.1
[debug] [2025-07-25T11:18:24.485Z] Time:          Fri Jul 25 2025 11:18:24 GMT+0000 (Coordinated Universal Time)
[debug] [2025-07-25T11:18:24.486Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-07-25T11:18:24.495Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-07-25T11:18:26.370Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-07-25T11:18:26.374Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-07-25T11:18:26.811Z] openjdk version "21.0.7" 2025-04-15

[debug] [2025-07-25T11:18:26.814Z] OpenJDK Runtime Environment (build 21.0.7+6-nixos)

[debug] [2025-07-25T11:18:26.815Z] OpenJDK 64-Bit Server VM (build 21.0.7+6-nixos, mixed mode, sharing)

[debug] [2025-07-25T11:18:26.887Z] Parsed Java major version: 21
[info] i  emulators: Starting emulators: firestore {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore"}}
[info] i  emulators: Detected demo project ID "demo-app", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail. {"metadata":{"emulator":{"name":"hub"},"message":"Detected demo project ID \"demo-app\", emulated services will use a demo configuration and attempts to access non-emulated services for this project will fail."}}
[warn] ⚠  auth: Not starting the auth emulator, make sure you have run firebase init. {"metadata":{"emulator":{"name":"auth"},"message":"Not starting the auth emulator, make sure you have run firebase init."}}
[warn] ⚠  hub: Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400 {"metadata":{"emulator":{"name":"hub"},"message":"Error when trying to check port 4400 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4400"}}
[warn] ⚠  hub: Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"hub"},"message":"Port 4400 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  hub: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"hub"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  ui: Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000 {"metadata":{"emulator":{"name":"ui"},"message":"Error when trying to check port 4000 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4000"}}
[warn] ⚠  ui: Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"ui"},"message":"Port 4000 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  ui: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"ui"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  logging: Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500 {"metadata":{"emulator":{"name":"logging"},"message":"Error when trying to check port 4500 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:4500"}}
[warn] ⚠  logging: Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"logging"},"message":"Port 4500 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  logging: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"logging"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore: Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 8080 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:8080"}}
[warn] ⚠  firestore: Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 8080 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[warn] ⚠  firestore.websocket: Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150 {"metadata":{"emulator":{"name":"firestore"},"message":"Error when trying to check port 9150 on ::1: Error: listen EADDRNOTAVAIL: address not available ::1:9150"}}
[warn] ⚠  firestore: Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients. {"metadata":{"emulator":{"name":"firestore"},"message":"Port 9150 is available on 127.0.0.1 but not ::1. This may cause issues with some clients."}}
[warn] ⚠  firestore: If you encounter connectivity issues, consider switching to a different port or explicitly specifying "host": "<ip address>" instead of hostname in firebase.json {"metadata":{"emulator":{"name":"firestore"},"message":"If you encounter connectivity issues, consider switching to a different port or explicitly specifying \"host\": \"<ip address>\" instead of hostname in firebase.json"}}
[debug] [2025-07-25T11:18:26.946Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2025-07-25T11:18:26.968Z] [hub] writing locator at /tmp/hub-demo-app.json
[debug] [2025-07-25T11:18:26.998Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2025-07-25T11:18:26.999Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2025-07-25T11:18:27.000Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","demo-app","--rules","/home/user/studio/firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/nix/store/6630rdigdc1h6ay3q6zs9bnvj2zrs70g-emulators/cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"demo-app\",\"--rules\",\"/home/user/studio/firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to firestore-debug.log"}}
[debug] [2025-07-25T11:18:34.173Z] Jul 25, 2025 11:18:33 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 25, 2025 11:18:33 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2025-07-25T11:18:34.429Z] API endpoint: http://127.0.0.1:8080
If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

If you are running a Firestore in Datastore Mode project, run:

   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080

Note: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.
Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://127.0.0.1:8080\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nIf you are running a Firestore in Datastore Mode project, run:\n\n   export DATASTORE_EMULATOR_HOST=127.0.0.1:8080\n\nNote: Support for Datastore Mode is in preview. If you encounter any bugs please file at https://github.com/firebase/firebase-tools/issues.\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2025-07-25T11:18:34.666Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: connect ECONNREFUSED 127.0.0.1:40001. If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub host: 127.0.0.1 port: 4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-25T19:18:25.609Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-25T19:18:25.610Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"\nrules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check if the user is the owner of the document.\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // Users can only read and update their own profile.\n    match /users/{userId} {\n      allow read;\n      allow update: if isOwner(userId);\n    }\n\n    // Projects and their subcollections can only be accessed by their owner.\n    match /projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /transactions/{transactionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // Productions and their subcollections\n    match /productions/{productionId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /shooting_days/{dayId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // Creative projects (moodboards) and their items\n    match /creative_projects/{projectId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n     match /board_items/{itemId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    // Storyboards and their panels\n    match /storyboards/{storyboardId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    match /storyboard_scenes/{sceneId} {\n      allow read, create, update, delete: if request.auth != null; // Allow logged-in users to manage scenes\n    }\n     match /storyboard_panels/{panelId} {\n      allow read, update, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n\n    // Public content can be read by anyone.\n    // Only admins (defined in user profile) can write/update them.\n    function isAdmin() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;\n    }\n\n    match /posts/{postId} {\n      allow read;\n      allow create, update, delete: if isAdmin();\n    }\n    \n    match /pages/{pageId} {\n      allow read;\n      allow create, update, delete: if isAdmin();\n    }\n\n    match /teamMembers/{memberId} {\n        allow read;\n        allow create, update, delete: if isAdmin();\n    }\n\n    match /settings/theme {\n        allow read;\n        allow create, update, delete: if isAdmin();\n    }\n  }\n}\n"}]}}
[debug] [2025-07-25T19:18:25.884Z] Jul 25, 2025 7:18:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 25, 2025 7:18:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-25T19:18:26.809Z] Jul 25, 2025 7:18:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 25, 2025 7:18:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-25T19:18:29.110Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-25T19:18:29.111Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2025-07-25T20:10:40.835Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules [none]
[debug] [2025-07-25T20:10:40.835Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"\nrules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Helper function to check ownership\n    function isOwner(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n    \n    // Checks if the user has the 'isAdmin' flag in their profile\n    function isAdmin() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;\n    }\n\n    // Users can read their own profile. Admins can read any profile.\n    match /users/{userId} {\n      allow read: if isOwner(userId) || isAdmin();\n      allow write: if isOwner(userId);\n    }\n    \n    // Public content (Pages, Blog Posts, Team Members, Theme) is readable by anyone\n    // Only admins can write/edit public content\n    match /pages/{pageId} {\n      allow read: if true;\n      allow write: if isAdmin();\n    }\n\n    match /posts/{postId} {\n      allow read: if true;\n      allow write: if isAdmin();\n    }\n\n    match /teamMembers/{memberId} {\n      allow read: if true;\n      allow write: if isAdmin();\n    }\n    \n    match /settings/theme {\n      allow read: if true;\n      allow write: if isAdmin();\n    }\n\n    // User-specific data can only be accessed by the owner\n    match /projects/{projectId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /transactions/{transactionId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /productions/{productionId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /shooting_days/{dayId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /creative_projects/{projectId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n\n    match /board_items/{itemId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboards/{storyboardId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboard_panels/{panelId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n    \n    match /storyboard_scenes/{sceneId} {\n      allow read, write, delete: if isOwner(resource.data.userId);\n      allow create: if isOwner(request.resource.data.userId);\n    }\n  }\n}\n"}]}}
[debug] [2025-07-25T20:10:40.864Z] Jul 25, 2025 8:10:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 25, 2025 8:10:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2025-07-25T20:10:40.953Z] Jul 25, 2025 8:10:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jul 25, 2025 8:10:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2025-07-25T20:10:41.544Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules 200
[debug] [2025-07-25T20:10:41.550Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/demo-app:securityRules {}
[info] ✔  firestore: Rules updated. 
