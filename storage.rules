rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
  
    // Users can read and write to their own private folder
    match /users/{userId}/{allPaths=**} {
      allow read, write: if isOwner(userId);
    }
    
    // Rules for user-uploaded content, organized by user
    match /content/{folder}/{userId}/{allPaths=**} {
      allow read, write: if isOwner(userId);
    }
    
    // Rules for team member photos and login background.
    // Allow anyone to read these, but only authenticated users to write.
    // A cloud function or admin SDK should be used for more granular control if needed.
    match /team_photos/{allPaths=**} {
        allow read: if true;
        allow write: if request.auth != null;
    }
    
    match /content/login_background/{allPaths=**} {
        allow read: if true;
        allow write: if request.auth != null;
    }
    
    // By default, deny all other access.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
