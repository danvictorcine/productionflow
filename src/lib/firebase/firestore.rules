
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can read and update their own profile.
    // Creation is handled by a backend function (or Cloud Function), so we don't need a public create rule.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
    }
    
    // Projects (Financial)
    match /projects/{projectId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Transactions for Financial Projects
    match /transactions/{transactionId} {
        allow read, update, delete: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);
    }
    
    // Productions (Call Sheet)
    match /productions/{productionId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Shooting Days for Productions
    match /shooting_days/{dayId} {
       allow read, update, delete: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }
    
    // Creative Projects (Moodboards)
    match /creative_projects/{creativeProjectId} {
        allow read, update, delete: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);
    }

    // Board Items for Creative Projects
    match /board_items/{itemId} {
        allow read, update, delete: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);
    }

    // --- Public Content Collections ---
    
    // Blog Posts - anyone can read
    match /posts/{postId} {
      allow get, list: if true;
      allow create, update, delete: if request.auth != null; // Write requires auth
    }
    
    // Page Content (About, Contact, etc.) - anyone can read
    match /pages/{pageId} {
      allow get, list: if true;
      allow create, update, delete: if request.auth != null; // Write requires auth
    }
    
    // Team Members (for About page) - anyone can read
    match /teamMembers/{memberId} {
      allow get, list: if true;
      allow create, update, delete: if request.auth != null; // Write requires auth
    }
    
    // Theme Settings - anyone can read
    match /settings/theme {
      allow get: if true; // Only single doc, so get is sufficient for public read
      allow create, update, delete: if request.auth != null; // Write requires auth
    }
  }
}
