rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Default-deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to manage their own profile
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Generic function for user-owned collections
    function userOwnedRules(collectionName) {
      return {
        match /$(collectionName)/{docId} {
          // Allow read/update/delete if the user owns the document
          allow get, update, delete: if isOwner(resource.data.userId),
          // Allow list if the user is making the query
          allow list: if request.auth != null,
          // Allow create if the user is setting themselves as the owner
          allow create: if isOwner(request.resource.data.userId)
        }
      };
    }
    
    // Apply rules to all project-related collections
    include userOwnedRules("projects");
    include userOwnedRules("transactions");
    include userOwnedRules("productions");
    include userOwnedRules("shooting_days");
    include userOwnedRules("creative_projects");
    include userOwnedRules("board_items");
    include userOwnedRules("storyboards");
    include userOwnedRules("storyboard_scenes");
    include userOwnedRules("storyboard_panels");
    include userOwnedRules("projectGroups");

    // Public collections (anyone can read, only admins can write)
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /posts/{postId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /pages/{pageId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /teamMembers/{memberId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Publicly readable documents for sharing
    match /public_productions/{productionId} { allow get: if true; }
    match /public_shooting_days/{dayId} { allow get: if true; }
  }
}
