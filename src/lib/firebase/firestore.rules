rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ========= Helper Functions =========
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Use exists() to prevent errors if the user document doesn't exist yet during signup.
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // ========= User Profiles =========
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null;
      allow update: if isOwner(userId);
    }

    // ========= Generic Rules for User-Owned Data (Projects, etc.) =========
    function canRead(userId) {
      return isOwner(userId);
    }
    
    function canList(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function canWrite(userId) {
      return isOwner(userId);
    }
    
    function defaultSecurityRules(collectionName) {
      return {
        // GET requests
        "allow get": if canRead(resource.data.userId),
        // LIST requests (queries)
        "allow list": if canList(request.query.resource.data.userId),
        // WRITE requests (create, update, delete)
        "allow write": if canWrite(request.resource.data.userId),
      }
    }

    // ========= Project-related Collections =========
    match /projects/{docId} {
      rules { include defaultSecurityRules("projects"); }
    }
    match /transactions/{docId} {
      rules { include defaultSecurityRules("transactions"); }
    }
    match /productions/{docId} {
      rules { include defaultSecurityRules("productions"); }
    }
     match /shooting_days/{docId} {
      rules { include defaultSecurityRules("shooting_days"); }
    }
    match /creative_projects/{docId} {
      rules { include defaultSecurityRules("creative_projects"); }
    }
    match /board_items/{docId} {
      rules { include defaultSecurityRules("board_items"); }
    }
    match /storyboards/{docId} {
      rules { include defaultSecurityRules("storyboards"); }
    }
    match /storyboard_scenes/{docId} {
      rules { include defaultSecurityRules("storyboard_scenes"); }
    }
    match /storyboard_panels/{docId} {
      rules { include defaultSecurityRules("storyboard_panels"); }
    }
    match /projectGroups/{docId} {
      rules { include defaultSecurityRules("projectGroups"); }
    }

    // ========= Public and Admin Collections =========
    match /public_productions/{productionId} {
      allow get: if true;
    }
    match /public_shooting_days/{dayId} {
      allow get: if true;
    }

    function publicReadAdminWrite() {
      return {
        "allow read": if true,
        "allow write": if isAdmin(),
      };
    }
    
    match /posts/{postId} {
      rules { include publicReadAdminWrite(); }
    }
    match /pages/{pageId} {
      rules { include publicReadAdminWrite(); }
    }
    match /teamMembers/{memberId} {
      rules { include publicReadAdminWrite(); }
    }
    match /settings/{settingId} {
      rules { include publicReadAdminWrite(); }
    }
  }
}
