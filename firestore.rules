
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership based on a userId field
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Projects (Financial)
    match /projects/{projectId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // Transactions (Financial)
    match /transactions/{transactionId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // User profiles
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth != null;
    }
    
    // Productions (Call Sheet Projects)
    match /productions/{productionId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Shooting Days (Call Sheets)
    match /shooting_days/{dayId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Public Productions for sharing
    match /public_productions/{productionId} {
      allow read: if true;
      allow create, update: if isOwner(request.resource.data.userId);
      allow delete: if false; // Deletion should be handled by app logic on project deletion.
    }
    
    // Creative Projects (Moodboards)
    match /creative_projects/{projectId} {
       allow read, update, delete: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }

    // Board Items (Moodboard Items)
    match /board_items/{itemId} {
       allow read, update, delete: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }
    
    // Storyboards
    match /storyboards/{storyboardId} {
       allow read, update, delete: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }
    
    // Storyboard Scenes
    match /storyboard_scenes/{sceneId} {
       allow read, update, delete: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }

    // Storyboard Panels
    match /storyboard_panels/{panelId} {
       allow read, update, delete: if isOwner(resource.data.userId);
       allow create: if isOwner(request.resource.data.userId);
    }

    // Posts, Pages, Team Members, and Settings are Admin-only
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /posts/{postId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /pages/{pageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /teamMembers/{memberId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /settings/{settingId} {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}
