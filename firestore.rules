
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default-deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to manage their own profile
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Generic rule for user-owned content
    function isOwner() {
      return request.auth.uid == resource.data.userId;
    }

    // Project collections
    match /projects/{docId} { allow read, write: if isOwner(); }
    match /transactions/{docId} { allow read, write: if isOwner(); }
    match /productions/{docId} { allow read, write: if isOwner(); }
    match /shooting_days/{docId} { allow read, write: if isOwner(); }
    match /creative_projects/{docId} { allow read, write: if isOwner(); }
    match /board_items/{docId} { allow read, write: if isOwner(); }
    match /storyboards/{docId} { allow read, write: if isOwner(); }
    match /storyboard_scenes/{docId} { allow read, write: if isOwner(); }
    match /storyboard_panels/{docId} { allow read, write: if isOwner(); }
    match /projectGroups/{docId} { allow read, write: if isOwner(); }

    // Public collections (anyone can read, only admins can write)
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /posts/{docId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /pages/{docId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /teamMembers/{docId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /settings/{docId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    
    // Publicly readable documents for sharing
    match /public_productions/{productionId} {
        allow get: if true;
    }
    match /public_shooting_days/{dayId} {
        allow get: if true;
    }
  }
}
