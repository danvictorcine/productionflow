rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Deny all by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read any profile, but only update their own. Admins can update any.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId 
                    || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // User can only read/write their own documents in these collections
    match /projects/{docId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }
    match /transactions/{docId} {
      allow read, write: if get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.userId == request.auth.uid;
    }
    match /productions/{docId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }
    match /shooting_days/{docId} {
        allow read, write: if get(/databases/$(database)/documents/productions/$(request.resource.data.productionId)).data.userId == request.auth.uid;
    }
    match /creative_projects/{docId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }
    match /board_items/{docId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Public content can be read by anyone, but only written by admins.
    match /posts/{docId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    match /pages/{docId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
