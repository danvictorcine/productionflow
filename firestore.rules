rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rule for the users collection
    match /users/{userId} {
      // Users can only read their own profile, admins can read any profile
      allow read: if isOwner(userId) || isOwner(request.resource.data.uid) || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Users can only create and update their own profile
      allow create, update: if isOwner(userId);
    }
    
    // Rule for settings collection (used for theme, beta limits, etc.)
    match /settings/{docId} {
        // Allow anyone to read settings (like theme)
        allow read: if true;
        // Only admins can write to settings
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for all project-related collections
    match /{collection}/{docId} {
      allow read, write: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Rules for public-facing data (shared productions and shooting days)
    match /public_productions/{productionId} {
      allow read: if true;
      allow write: if isAuthenticated() && isOwner(request.resource.data.userId);
    }
    
    match /public_shooting_days/{dayId} {
        allow read: if true;
        allow write: if isAuthenticated() && isOwner(request.resource.data.day.userId);
    }
    
    // Rules for blog posts
    match /posts/{postId} {
        allow read: if true; // Everyone can read posts
        allow create, update, delete: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Rules for static pages content (about, contact, etc.)
    match /pages/{pageId} {
        allow read: if true;
        allow write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
     // Rules for the "teamMembers" collection (for the "About Us" page)
    match /teamMembers/{memberId} {
      allow read: if true; // Everyone can read team members
      // Only admins can create, update, or delete team members
      allow write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for the global "talents" collection
    match /talents/{talentId} {
      // User can only interact with their own talents.
      allow read, create, update, delete: if isOwner(request.resource.data.userId);
    }

  }
}
