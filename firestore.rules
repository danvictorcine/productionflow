rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the signed-in user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read or update their own profile document.
      // A user can create their own profile document upon signup.
      allow read, update, create: if isSignedIn() && isOwner(userId);
    }

    // Rules for the 'projects' collection
    match /projects/{projectId} {
      // A user can read, update, or delete projects they own.
      allow read, update, delete: if isSignedIn() && isOwner(resource.data.userId);

      // A user can create a project if they are authenticated and the owner.
      // We also validate the data structure for security.
      allow create: if isSignedIn()
                    && isOwner(request.resource.data.userId)
                    && request.resource.data.name is string
                    && request.resource.data.budget is number;
    }

    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
      // A user can read, update, or delete transactions they own.
      allow read, update, delete: if isSignedIn() && isOwner(resource.data.userId);

      // A user can create a transaction if:
      // 1. They are the owner of the transaction record.
      // 2. The associated project exists and they also own it.
      // 3. The incoming data has a valid structure.
      allow create: if isSignedIn()
                    && isOwner(request.resource.data.userId)
                    && exists(/databases/$(database)/documents/projects/$(request.resource.data.projectId))
                    && get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.userId == request.auth.uid
                    && request.resource.data.description is string
                    && request.resource.data.amount is number
                    && request.resource.data.date is timestamp;
    }
  }
}
