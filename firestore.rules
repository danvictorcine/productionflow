rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // --- User-specific, private collections ---
    
    match /users/{userId} {
      allow read, update: if isOwner(userId);
    }
    
    match /projects/{projectId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /transactions/{transactionId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /productions/{productionId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /shooting_days/{dayId} {
       // Allow create if the user is the owner of the new document.
       allow create: if isOwner(request.resource.data.userId);
       // Allow read if owner, or if the document is marked as public.
       allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;
       // Allow update/delete only by the owner.
       allow update, delete: if isOwner(resource.data.userId);
    }
    
    match /creative_projects/{creativeProjectId} {
        allow read, update, delete: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);
    }

    match /board_items/{itemId} {
        allow read, update, delete: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);
    }
    
    match /storyboards/{storyboardId} {
        // Allow create if the user is the owner of the new document.
        allow create: if isOwner(request.resource.data.userId);
        // Allow read if owner, or if the document is marked as public.
        allow read: if isOwner(resource.data.userId) || resource.data.isPublic == true;
        // Allow update/delete only by the owner.
        allow update, delete: if isOwner(resource.data.userId);
    }

    match /storyboard_panels/{panelId} {
        // Owner can do everything.
        allow create: if isOwner(request.resource.data.userId);
        allow read, update, delete: if isOwner(resource.data.userId) || get(/databases/$(database)/documents/storyboards/$(resource.data.storyboardId)).data.isPublic == true;
    }
    
    // --- Public Shares Collection ---
    match /public_shares/{shareId} {
        // Anyone can read from this collection
        allow get: if true;
        // Only authenticated users can create/delete their own shares
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // --- Other Collections (Team, Content, etc.) ---
    
    match /posts/{postId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
    
    match /pages/{pageId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
    
    match /teamMembers/{memberId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }
    
    match /settings/theme {
      allow get: if true;
      allow create, update, delete: if request.auth != null;
    }
  }
}
