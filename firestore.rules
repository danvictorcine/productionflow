
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to determine ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // User can only read/write their own data
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Generic rule for all user-owned collections
    match /{collection}/{docId} {
      allow read, write: if request.auth != null && isOwner(resource.data.userId);
    }
    
    // Public collections (anyone can read, only admins can write)
    function isAdmin() {
      // Check for the existence of the user document and the isAdmin field
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /posts/{docId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /pages/{docId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /teamMembers/{docId} {
      allow get: if true;
      allow list, write: if isAdmin();
    }
    match /settings/{docId} {
      allow read: if true; // Allow reading settings like theme
      allow write: if isAdmin();
    }
    
    // Publicly readable documents for sharing
    match /public_productions/{productionId} {
        allow get: if true;
    }
    match /public_shooting_days/{dayId} {
        allow get: if true;
    }
  }
}

