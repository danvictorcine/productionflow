rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // User Profiles: Read-only for all, owner can update, admin can write.
    match /users/{userId} {
      allow read;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow create, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Public content (Pages, Posts): Readable by all, writable only by admins.
    match /pages/{pageId} {
      allow read;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /posts/{postId} {
      allow read;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Projects: User-specific data. Owner has full access.
    match /projects/{projectId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /transactions/{transactionId} {
      // Allow read/write if the user ID on the transaction matches the authenticated user.
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Production Data: User-specific. Owner has full access.
    match /productions/{productionId} {
       allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /shooting_days/{dayId} {
       allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Creative Projects: User-specific. Owner has full access.
    match /creative_projects/{creativeProjectId} {
        allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /board_items/{itemId} {
       allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
