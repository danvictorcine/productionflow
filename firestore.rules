rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users: can only read/write their own profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Posts: anyone can read, but only admins can write/delete.
    match /posts/{postId} {
      allow read;
      allow create, update, delete: if request.auth != null && isAdmin();
    }
    
    // Pages (About, Contact, etc.): anyone can read, but only admins can write.
    match /pages/{pageId} {
      allow read;
      allow write: if request.auth != null && isAdmin();
    }

    // Login Features: anyone can read, but only admins can write.
    match /login_features/{featureId} {
      allow read;
      allow create, update, delete: if request.auth != null && isAdmin();
    }
    
    // Project Data: Financial, Production, Creative, and their children
    // Note: Separating create from other operations is crucial.
    // 'resource.data' is for existing documents (read, update, delete).
    // 'request.resource.data' is for new documents (create).
    
    match /projects/{projectId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    match /transactions/{transactionId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    match /productions/{productionId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    match /shooting_days/{dayId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    match /creative_projects/{projectId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // For the board_items query to work, you need a composite index.
    // In Firestore > Indexes > Add composite index:
    // Collection ID: board_items
    // Fields: projectId (Asc), userId (Asc), createdAt (Asc)
    // Query Scope: Collection
    match /board_items/{itemId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
