
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Checks if the user has the 'isAdmin' flag in their profile
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can read their own profile. Admins can read any profile.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
    }
    
    // Public content (Pages, Blog Posts, Team Members, Theme) is readable by anyone
    // Only admins can write/edit public content
    match /pages/{pageId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /posts/{postId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /teamMembers/{memberId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /settings/theme {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User-specific data can only be accessed by the owner
    match /projects/{projectId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /transactions/{transactionId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /productions/{productionId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /shooting_days/{dayId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /creative_projects/{projectId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /board_items/{itemId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /storyboards/{storyboardId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /storyboard_panels/{panelId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /storyboard_scenes/{sceneId} {
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
  }
}
