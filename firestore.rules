
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(uid) {
      return request.auth.uid == uid;
    }
    
    // PUBLIC collections
    match /public_productions/{productionId} {
    	allow read: if true;
      allow write: if false; // Only server can write
    }
    
    match /public_shooting_days/{dayId} {
    	allow read: if true;
      allow write: if false; // Only server can write
    }
    
    match /posts/{postId} {
    	allow read: if true;
      allow write: if resource.data.authorId == request.auth.uid;
    }
    
    match /pages/{pageId} {
    	allow read: if true;
      allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /teamMembers/{memberId} {
    	allow read: if true;
      allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /settings/theme {
    	allow read: if true;
      allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
     match /settings/betaLimits {
    	allow read: if true;
      allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // USER-OWNED collections
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if request.auth.uid != null;
      allow update: if isOwner(userId);
    }
    
    // Project Groups
    match /projectGroups/{groupId} {
    	allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    // Projects Collections
    match /projects/{projectId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
       // Allow queries by groupId for the owner
        allow list: if request.auth.uid != null && request.auth.uid == resource.data.userId;
    }
    
    match /productions/{productionId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
       allow list: if request.auth.uid != null && request.auth.uid == resource.data.userId;
    }

    match /creative_projects/{projectId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
       allow list: if request.auth.uid != null && request.auth.uid == resource.data.userId;
    }
    
    match /storyboards/{storyboardId} {
    	 allow read, create, update, delete: if isOwner(resource.data.userId);
       allow list: if request.auth.uid != null && request.auth.uid == resource.data.userId;
    }

		// Transaction Collections
    match /transactions/{transactionId} {
      allow read, create, update, delete: if isOwner(resource.data.userId);
    }

    // Sub-collections
    match /shooting_days/{dayId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    match /board_items/{itemId} {
       allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
    match /storyboard_scenes/{sceneId} {
    	 allow read, create, update, delete: if isOwner(resource.data.userId);
    }
    
     match /storyboard_panels/{panelId} {
    	 allow read, create, update, delete: if isOwner(resource.data.userId);
    }
  }
}
