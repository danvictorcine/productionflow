
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, update: if isOwner(userId);
    }
    
    match /projects/{projectId} {
      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }
    
    match /transactions/{transactionId} {
      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }
    
    match /productions/{productionId} {
      allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }
    
    match /shooting_days/{dayId} {
       allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }
    
    match /creative_projects/{creativeProjectId} {
        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }

    match /board_items/{itemId} {
        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }
    
    match /storyboards/{storyboardId} {
        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }

    match /storyboard_panels/{panelId} {
        allow read, create, update, delete: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
    }

    // Public collections
    match /{collection}/{docId} where collection in ['posts', 'pages', 'teamMembers', 'settings'] {
        allow read: if true;
        allow write: if request.auth != null;
    }
  }
}
