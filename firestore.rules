rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: can only read/write their own profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Posts: anyone can read, but only admins can write/delete.
    match /posts/{postId} {
      allow read;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Page content (about, contact): anyone can read, only admins can write.
    match /pages/{pageId} {
      allow read;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Projects: only the owner can access their own projects.
    match /projects/{projectId} {
      allow read, create, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Transactions: only the owner can access their own transactions.
    match /transactions/{transactionId} {
        allow read, create, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Productions: only the owner can access their own productions.
    match /productions/{productionId} {
        allow read, create, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Shooting Days: only the owner can access their own shooting days.
     match /shooting_days/{dayId} {
      allow read, create, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
